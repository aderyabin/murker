# Helpers for specs
module Helpers
  def schema(endpoint:, verb:, response:, parameters: nil)
    schema = {
      'openapi' => '3.0.0',
      'info' => { 'title' => 'Generated by Murker', 'version' => '0.1.0' },
    }
    response_and_params =
      if parameters
        { 'responses' => response, 'parameters' => parameters }
      else
        { 'responses' => response }
      end

    schema['paths'] = { endpoint => { verb => response_and_params } }

    schema
  end

  def response_schema(code:, description:, content_schema:)
    {
      "'#{code}'" => {
        'description' => description,
        'content' => { 'application/json' => content_schema },
      },
    }
  end

  def expected_get_martians_schema
    schema(
      endpoint: '/martians',
      verb: 'get',
      response: response_schema(
        code: 200,
        description: 'GET /martians -> 200',
        content_schema: {
          'type' => 'array',
          'minItems' => 1,
          'uniqueItems' => true,
          'items' => {
            'type' => 'object',
            'required' => %w[name age],
            'properties' => {
              'name' => { 'type' => 'string' }, 'age' => { 'type' => 'integer' }
            },
          },
        },
      ),
    )
  end

  def expected_get_martians_schema_reordered
    schema(
      endpoint: '/martians',
      verb: 'get',
      response: response_schema(
        code: 200,
        description: 'GET /martians -> 200',
        content_schema: {
          'type' => 'array',
          'minItems' => 1,
          'uniqueItems' => true,
          'items' => {
            'type' => 'object',
            'required' => %w[age name], # was [name age]
            'properties' => { # was name, age
              'age' => { 'type' => 'integer' }, 'name' => { 'type' => 'string' }
            },
          },
        },
      ),
    )
  end

  def expected_get_martian_schema
    schema(
      endpoint: '/martians/{id}',
      verb: 'get',
      parameters: [{
        'in' => 'path', 'name' => 'id', 'description' => 'id',
        'schema' => { 'type' => 'integer' },
        'required' => true, 'example' => '1'
      }],
      response: response_schema(
        code: 200,
        description: 'GET /martians/:id -> 200',
        content_schema: {
          'type' => 'object', 'required' => %w[name age],
          'properties' => {
            'name' => { 'type' => 'string' }, 'age' => { 'type' => 'integer' }
          }
        },
      ),
    )
  end
end
